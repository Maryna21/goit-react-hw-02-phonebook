{"version":3,"sources":["components/ContactForm/contactForm.js","components/ContactList/contactList.js","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","loginInputId","shortid","generate","state","contacts","name","number","handleNameChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onAddContact","reset","onSubmit","this","htmlFor","type","id","onChange","Component","ContactList","onDeleteContact","map","onClick","App","filter","addContact","contact","prevState","deleteContact","contactId","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAGqBA,E,4MACjBC,aAAeC,IAAQC,W,EACvBC,MAAQ,CACJC,SAAU,GACVC,KAAM,GACNC,OAAQ,I,EAEVC,iBAAiB,SAAAC,GACf,EAAKC,SAAL,eAAgBD,EAAME,cAAcL,KAAMG,EAAME,cAAcC,S,EAE9DC,aAAe,SAAAJ,GACbA,EAAMK,iBACP,EAAKC,MAAMC,aAAa,EAAKZ,OAC7B,EAAKa,S,EAENA,MAAQ,WACJ,EAAKP,SAAS,CAACJ,KAAM,GAAIC,OAAO,M,uDAGhC,OACE,uBAAMW,SAAUC,KAAKN,aAArB,UACE,uBAAOO,QAASD,KAAKlB,aAArB,kBACA,uBAAOoB,KAAK,OAAOf,KAAK,OAAOgB,GAAIH,KAAKlB,aAAcW,MAAOO,KAAKf,MAAME,KAAMiB,SAAUJ,KAAKX,mBAC7F,uBAAOY,QAASD,KAAKlB,aAArB,oBACA,uBAAOoB,KAAK,OAAOf,KAAK,SAASgB,GAAIH,KAAKlB,aAAcW,MAAOO,KAAKf,MAAMG,OAAQgB,SAAUJ,KAAKX,mBACjG,wBAAQa,KAAK,SAAb,gC,GAzByBG,aCO1BC,EARK,SAAC,GAAD,IAAEpB,EAAF,EAAEA,SAAUqB,EAAZ,EAAYA,gBAAZ,OAClB,6BACGrB,EAASsB,KAAI,gBAAEL,EAAF,EAAEA,GAAIhB,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,OAAZ,OACZ,mCAAeD,EAAf,KAAuBC,EACvB,wBAAQc,KAAK,SAASO,QAAS,kBAAKF,EAAgBJ,IAApD,sBADSA,SC4CAO,E,4MA1CbzB,MAAQ,CACNC,SAAU,CACR,CAACiB,GAAI,OAAQhB,KAAM,gBAAiBC,OAAQ,aAC5C,CAACe,GAAI,OAAQhB,KAAM,iBAAkBC,OAAQ,aAC7C,CAACe,GAAI,OAAQhB,KAAM,gBAAiBC,OAAQ,aAC5C,CAACe,GAAI,OAAQhB,KAAM,iBAAkBC,OAAQ,cAE/CuB,OAAQ,I,EAGVC,WAAa,YAAqB,IAAnBzB,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,OACbyB,EAAU,CACZV,GAAIpB,IAAQC,WACZG,OACAC,UAEJ,EAAKG,UAAS,SAAAuB,GACZ,MAAO,CACH5B,SAAS,GAAD,mBAAM4B,EAAU5B,UAAhB,CAA0B2B,S,EAK5CE,cAAgB,SAAAC,GACd,EAAKzB,UAAS,SAAAuB,GAAS,MAAI,CACzB5B,SAAU4B,EAAU5B,SAASyB,QAAO,SAAAE,GAAO,OAAIA,EAAQV,KAAMa,U,uDAKrD,IACD9B,EAAYc,KAAKf,MAAjBC,SACP,OACE,qCACD,cAAC,EAAD,CAAaW,aAAcG,KAAKY,aAC/B1B,EAAS+B,OAAS,GAAK,cAAC,EAAD,CAAa/B,SAAUA,EAAUqB,gBAAiBP,KAAKe,uB,GApClEV,aCMHa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ade6cc88.chunk.js","sourcesContent":["import shortid from 'shortid';\nimport React, { Component } from 'react';\n\nexport default class ContactForm extends Component{\n    loginInputId = shortid.generate();\n    state = {\n        contacts: [],\n        name: '',\n        number: ''\n      }\n      handleNameChange=event=>{\n        this.setState({[event.currentTarget.name]:event.currentTarget.value});\n      }\n        handleSubmit = event => {\n          event.preventDefault();\n         this.props.onAddContact(this.state);\n         this.reset();\n        }\n        reset = () => {\n            this.setState({name: '', number:''})\n        }\n        render() {\n            return (\n              <form onSubmit={this.handleSubmit}>\n                <label htmlFor={this.loginInputId}>Name</label>\n                <input type=\"text\" name=\"name\" id={this.loginInputId} value={this.state.name} onChange={this.handleNameChange}/>\n                <label htmlFor={this.loginInputId}>Number</label>\n                <input type=\"text\" name=\"number\" id={this.loginInputId} value={this.state.number} onChange={this.handleNameChange}/>\n                <button type=\"submit\">Add contact</button>\n              </form>\n            );\n          }}\n","import React from 'react';\n\nconst ContactList = ({contacts, onDeleteContact})=>(\n  <ul>\n    {contacts.map(({id, name, number}) => (\n      <li key={id}> {name}: {number}\n      <button type=\"button\" onClick={()=> onDeleteContact(id)}>Delete</button></li>\n    ))}\n  </ul>\n)\nexport default ContactList;","import shortid from 'shortid';\nimport './App.css';\nimport React, { Component } from 'react';\nimport ContactForm from 'components/ContactForm/contactForm';\nimport ContactList from 'components/ContactList/contactList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: ''\n  }\n\n  addContact = ({name, number}) => {\n    const contact = {\n        id: shortid.generate(),\n        name,\n        number,\n    };\n    this.setState(prevState =>{\n      return {\n          contacts: [...prevState.contacts, contact],\n      }\n  })\n};\n\ndeleteContact = contactId =>{\n  this.setState(prevState =>({\n    contacts: prevState.contacts.filter(contact => contact.id!== contactId),\n  }))\n \n}\n  \n  render() {\n    const {contacts} = this.state;\n    return (\n      <>\n     <ContactForm onAddContact={this.addContact} />\n     {contacts.length > 0 && <ContactList contacts={contacts} onDeleteContact={this.deleteContact}/>}\n    \n     </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}